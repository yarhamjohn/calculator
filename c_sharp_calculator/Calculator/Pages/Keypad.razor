<div class="button-container">
    @foreach (var row in @buttons) {
        @if (row.Count() == 1) {
        <div class="button-container-row-single">
            @foreach (var button in row) {
<button id=@button.DisplayText class="digit-button" @onclick="@(() => @HandleButtonClick(@button))">@button.DisplayText</button>   
            }
        </div>
        } else {
        <div class="button-container-row">
            @foreach (var button in row) {
<button id=@button.DisplayText class="digit-button" @onclick="@(() => @HandleButtonClick(@button))">@button.DisplayText</button>   
            }
        </div>
        }
    }
</div>




@code {
    List<List<Button>> buttons = new List<List<Button>>()
    {
    new List<Button>() { new Button(CalculatorAction.Divide)},
    new List<Button>() { new Button(7),new Button(8), new Button(9), new Button(CalculatorAction.Multiply) },
    new List<Button>() { new Button(4), new Button(5), new Button(6), new Button(CalculatorAction.Subtract) },
    new List<Button>() { new Button(1), new Button(2), new Button(3), new Button(CalculatorAction.Add) },
    new List<Button>() { new Button("+/-"), new Button(0), new Button("."), new Button(CalculatorAction.Equals) }
    };

    [Parameter]
    public EventCallback<Button> Update { get; set; }

    private async Task HandleButtonClick(Button button) { await Update.InvokeAsync(button); }
}
