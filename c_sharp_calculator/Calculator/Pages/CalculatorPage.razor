@page "/calculator"

<h1 class="mb-5">Calculator</h1>

<Display currentCalculation=@currentCalculation />
<Keypad updateCurrentCalculation=@updateCurrentCalculation />

@code {
    private List<string> currentCalculation = new List<string>();
    private List<string> operators = new List<string> { "+", "-", "x", "รท" };

    private void updateCurrentCalculation(Button button)
    {
        if (button.DisplayText == ".")
        {
            HandleDecimal();
            return;
        }

        if (button.DisplayText == "+/-")
        {
            HandleSignChange();
            return;
        }

        if (button.DisplayText == "=")
        {
            HandleEquals();
            return;
        }

        if (operators.Contains(button.DisplayText))
        {
            if (currentCalculation.Count == 0)
            {
                currentCalculation.AddRange(new List<string> { "0", button.DisplayText });
                return;
            }
            else if (operators.Contains(currentCalculation[currentCalculation.Count - 1]))
            {
                ReplaceLastOperator(button.DisplayText);
            }

        }

        currentCalculation.Add(button.DisplayText);
    }

    private void HandleEquals()
    {
        if (currentCalculation.Count == 0)
        {
            currentCalculation.AddRange(new List<string> { "0", "=" });
            return;
        }

        currentCalculation.Add("=");
        return;
    }

    private void HandleDecimal()
    {
        if (currentCalculation.Contains("."))
        {
            return;
        }

        if (currentCalculation.Count() == 0)
        {
            currentCalculation.AddRange(new[] { "0", "." });
            return;
        }

        currentCalculation.Add(".");
        return;
    }

    private void HandleSignChange()
    {
        if (currentCalculation.Count == 0) { return; }

        if (currentCalculation[0] == "-")
        {
            currentCalculation.RemoveAt(0);
            return;
        }

        currentCalculation.Insert(0, "-");
        return;
    }

    private void ReplaceLastOperator(string displayText)
    {
        currentCalculation.RemoveAt(currentCalculation.Count - 1);
        currentCalculation.Add(displayText);
    }
}